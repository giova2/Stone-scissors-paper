{"version":3,"sources":["types.tsx","constants.tsx","functions.tsx","App.tsx","index.tsx"],"names":["Option","Result","OPTIONS","PAPER","SCISSORS","STONE","RESULTS","DRAW","LOSE","WIN","App","useState","selection","setSelection","machineElection","setMachineElection","result","setResult","bufferUserName","setBufferUserName","userName","setUserName","qtyHumanWins","setQtyHumanWins","qtyMachineWins","setQtyMachineWins","useEffect","machineE","positions","length","Math","floor","random","machinePlay","res","className","data-user","data-machine","renderScore","style","height","onSubmit","type","onChange","e","preventDefault","currentTarget","value","placeholder","onClick","role","aria-label","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.522b6713.chunk.js","sourcesContent":["export enum Option {\n  PAPER = \"PAPER\",\n  SCISSORS = \"SCISSORS\",\n  STONE = \"STONE\",\n}\n\nexport enum Result {\n  WIN = \"WIN\",\n  LOSE = \"LOSE\",\n  DRAW = \"DRAW\",\n}\n\nexport type TypeResults = {\n  PAPER: { PAPER: string; SCISSORS: string; STONE: string };\n  SCISSORS: { PAPER: string; SCISSORS: string; STONE: string };\n  STONE: { PAPER: string; SCISSORS: string; STONE: string };\n};\n","import { Option } from \"./types\";\nexport const OPTIONS = [Option.PAPER, Option.SCISSORS, Option.STONE];\n","import { OPTIONS } from \"./constants\";\nimport { TypeResults, Option, Result } from \"./types\";\n\n// first is the user election and the the machine election\nconst RESULTS: TypeResults = {\n  PAPER: { PAPER: Result.DRAW, SCISSORS: Result.LOSE, STONE: Result.WIN },\n  SCISSORS: { PAPER: Result.WIN, SCISSORS: Result.DRAW, STONE: Result.LOSE },\n  STONE: { PAPER: Result.LOSE, SCISSORS: Result.WIN, STONE: Result.DRAW },\n};\n\nexport const machinePlay = () => {\n  const positions = OPTIONS.length;\n  return OPTIONS[Math.floor(Math.random() * positions)];\n};\n\nexport const checkWinner = (humanMove: Option, machineMove: Option) => {\n  return RESULTS[humanMove][machineMove];\n};\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { Option, Result } from \"./types\";\nimport { machinePlay, checkWinner } from \"./functions\";\n\nfunction App() {\n  const [selection, setSelection] = useState<Option | null>(null);\n  const [machineElection, setMachineElection] = useState<Option | null>(null);\n  const [result, setResult] = useState<string>(\"\");\n  const [bufferUserName, setBufferUserName] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n  const [qtyHumanWins, setQtyHumanWins] = useState(0);\n  const [qtyMachineWins, setQtyMachineWins] = useState(0);\n\n  useEffect(() => {\n    if (selection !== null) {\n      const machineE = machinePlay();\n      setMachineElection(machineE);\n      const res = checkWinner(selection, machineE);\n      setResult(res);\n      switch (res) {\n        case Result.WIN:\n          setQtyHumanWins(qtyHumanWins + 1);\n          break;\n        case Result.LOSE:\n          setQtyMachineWins(qtyMachineWins + 1);\n          break;\n      }\n    }\n  }, [selection]);\n\n  const resetVariables = () => {\n    setSelection(null);\n    setMachineElection(null);\n    setResult(\"\");\n    setBufferUserName(\"\");\n    setUserName(\"\");\n    setQtyHumanWins(0);\n    setQtyMachineWins(0);\n  };\n  const renderPutYourName = () => {\n    return (\n      <section className=\"game-field\" style={{ height: \"90vh\" }}>\n        <form\n          onSubmit={() => setUserName(bufferUserName)}\n          className=\"ml-4 mr-4 w-full md:w-1/2 flex flex-col justify-center\"\n        >\n          <input\n            type=\"text\"\n            className=\"text-black p-2 font-bold\"\n            onChange={(e: React.FormEvent<HTMLInputElement>) =>\n              e.preventDefault && setBufferUserName(e.currentTarget.value)\n            }\n            placeholder=\"Insert your name and press Confirm\"\n          />\n          <input\n            className=\"bg-blue-700 mt-3 p-2 font-bold hover:bg-blue-400 hover:text-black cursor-pointer text-center\"\n            type=\"submit\"\n            value=\"Confirm\"\n          />\n        </form>\n      </section>\n    );\n  };\n  const renderGame = () => {\n    if (userName === \"\") {\n      return renderPutYourName();\n    }\n    return (\n      <section className=\"game-field flex-wrap\">\n        {selection !== null && (\n          <div className=\"w-full flex justify-center items-center\">\n            <button\n              className=\"bg-blue-700 mt-3 p-2 font-bold hover:bg-blue-400 hover:text-black cursor-pointer text-center\"\n              onClick={() => setSelection(null)}\n            >\n              Play Again!\n            </button>\n            <button\n              className=\"bg-blue-700 mt-3 p-2 font-bold hover:bg-blue-400 hover:text-black cursor-pointer text-center ml-2\"\n              onClick={() => resetVariables()}\n            >\n              Restart Game!\n            </button>\n          </div>\n        )}\n\n        <div\n          className=\"option-container m-1 sm:m-4 hover:bg-white border-white border-2 rounded-full cursor-pointer flex justify-center items-center\"\n          onClick={() => selection === null && setSelection(Option.STONE)}\n        >\n          <span className=\"option\" role=\"img\" aria-label=\"scissors\">\n            ‚úäüèΩ\n          </span>\n        </div>\n        <div\n          className=\"option-container m-1 sm:m-4 hover:bg-white border-white border-2 rounded-full cursor-pointer flex justify-center items-center\"\n          onClick={() => selection === null && setSelection(Option.SCISSORS)}\n        >\n          <span className=\"option\" role=\"img\" aria-label=\"scissors\">\n            ‚úåüèΩ\n          </span>\n        </div>\n        <div\n          className=\"option-container m-1 sm:m-4 hover:bg-white border-white border-2 rounded-full cursor-pointer flex justify-center items-center\"\n          onClick={() => selection === null && setSelection(Option.PAPER)}\n        >\n          <span className=\"option\" role=\"img\" aria-label=\"scissors\">\n            ‚úãüèΩ\n          </span>\n        </div>\n      </section>\n    );\n  };\n\n  const renderMessage = () => {\n    if (selection === null) {\n      return \"Ready to play!\";\n    }\n    return (\n      <div>\n        {userName} choose <b className=\"text-red-400\">{selection}</b> and\n        machine choose <b className=\"text-red-400\">{machineElection}</b>, so you{\" \"}\n        <b className=\"text-blue-400\">{result}</b>\n      </div>\n    );\n  };\n  const renderScore = () => {\n    if (userName !== \"\") {\n      return (\n        <>\n          <section\n            className=\"game-score\"\n            data-user={userName}\n            data-machine=\"Machine\"\n          >\n            <div className=\"w-1/2 font-bold border-gray-800 border-2 flex justify-center items-center\">\n              <span className=\"flex-grow text-center text-2xl\">\n                {qtyHumanWins}&nbsp;\n              </span>\n              <span className=\"flex-grow text-center text-2xl\">|</span>\n              <span className=\"flex-grow text-center text-2xl\">\n                &nbsp;{qtyMachineWins}\n              </span>\n            </div>\n          </section>\n          <section className=\"game-messages\">\n            <div className=\"w-full font-bold flex justify-center items-center\">\n              <h1 className=\"text-center text-2xl\">{renderMessage()}</h1>\n            </div>\n          </section>\n        </>\n      );\n    }\n  };\n  return (\n    <div className=\"App\">\n      <header className=\"App-header text-2xl font-extrabold\">\n        <h1>Stone-Paper-Scissors GAME</h1>\n      </header>\n      {renderScore()}\n      {renderGame()}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}